@model SudokuSolver.Models.SudokuModel

@{
    ViewBag.Title = "Sudoku";
}

<div class="gameContainer">
    @using (Html.BeginForm("Solve", "Sudoku"))
    {
        <div class="sudokuSidebar">
            <div class="buttonContainer">

                <button type="submit">Auto Solve</button>
                <div class="clearfix"></div>

                <button type="button" onclick="location.href='@Url.Action("CreateSudoku", "Sudoku")'">Create Random</button>
                <div class="clearfix"></div>

                <label>Allowed User Input</label>
                <div class="slidecontainer">
                    <input type="range" onchange="ToggleUserControl(this.value)" min="0" max="2" value="0" step="1" class="slider" id="inputslider"/>
                </div>
                <div class="clearfix"></div>

                @Html.DropDownListFor(model => model.SudokuId, new SelectList(Model.Sudokus, "SudokuId", "Name", Model.SudokuId), new { @onchange = "SelectionChanged(this.value)" })
            </div>
        </div>
        <div class="sudokuMainContainer">
            <table border="1" id="ThickBorder">
                @for (int i = 0; i < 9; i++)
                {
                    <tr>
                        @for (int j = 0; j < 9; j++)
                        {
                            <td>
                                @Html.TextBoxFor(m => m.Cells[i][j], new { @class = "cell", @type = "number", @min = "0", @max = "9", @name = (i.ToString() + j.ToString()), @tag = Model.Cells[i][j], @onchange = "ValidateInput(this)" })
                            </td>
                        }
                    </tr>
                }
            </table>
        </div>
    }
</div>