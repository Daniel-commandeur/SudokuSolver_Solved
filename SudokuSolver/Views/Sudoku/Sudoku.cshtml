@model SudokuSolver.Models.SudokuModel

@{
    ViewBag.Title = "Sudoku";
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var datacellCollection = document.getElementsByClassName("cell");
        Array.prototype.forEach.call(datacellCollection, RemoveZeros);

        function RemoveZeros(currentDataCell) {
            if (currentDataCell.value == "0") {
                currentDataCell.value = "";
            }
        }
    });

    function SelectionChanged(sudokuId) {
        $.ajax({
            type: "POST",        
            url: '@Url.Action("ChangeSudoku", "Sudoku")',
            succes: sudokuId,
            data: sudokuId,
            value: sudokuId,
        }).done(function () {
            alert('Added');
            });
        location.reload(true);
    }
</script>

<div>
    @using (Html.BeginForm("Solve", "Sudoku"))
    {
        <div class="sudokuSidebar">
            <div class="buttonContainer">
                <button type="submit">Solve Sudoku</button>
                <div class="clearfix"></div>

                <button type="button" onclick="location.href='@Url.Action("CreateSudoku", "Sudoku")'">Create Sudoku</button>

                <div class="clearfix"></div>

                @Html.DropDownListFor(model => model.SudokuId, new SelectList(Model.Sudokus, "SudokuId", "Name", Model.SudokuId), new { @onchange = "SelectionChanged(this.value)" })
            </div>
        </div>
        <div class="sudokuMainContainer">
            <table border="1" id="ThickBorder">
                @for(int i=0;i<9;i++){
                    <tr>
                        @for(int j=0;j<9;j++){
                        <td>
                            @Html.TextBoxFor(m => m.Cells[i][j], new { @class = "cell", @type = "number", @min = "0", @max = "9" })
                        </td>
                        }
                    </tr>
                }
            </table>
        </div>
    }
</div>